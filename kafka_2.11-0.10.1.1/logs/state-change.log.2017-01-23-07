[2017-01-23 07:40:31,446] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=state.change.logger (state.change.logger)
[2017-01-23 07:42:14,037] TRACE Controller 0 epoch 1 received response {error_code=0} for a request sent to broker 192.168.0.13:9092 (id: 0 rack: null) (state.change.logger)
[2017-01-23 07:46:32,006] TRACE Controller 0 epoch 1 changed partition [twitterstream,0] state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2017-01-23 07:46:32,013] TRACE Controller 0 epoch 1 changed state of replica 0 for partition [twitterstream,0] from NonExistentReplica to NewReplica (state.change.logger)
[2017-01-23 07:46:32,029] TRACE Controller 0 epoch 1 changed partition [twitterstream,0] from NewPartition to OnlinePartition with leader 0 (state.change.logger)
[2017-01-23 07:46:32,030] TRACE Controller 0 epoch 1 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition [twitterstream,0] (state.change.logger)
[2017-01-23 07:46:32,035] TRACE Controller 0 epoch 1 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition twitterstream-0 (state.change.logger)
[2017-01-23 07:46:32,037] TRACE Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0], zkVersion=0, replicas=[0]) correlation id 1 from controller 0 epoch 1 for partition [twitterstream,0] (state.change.logger)
[2017-01-23 07:46:32,039] TRACE Controller 0 epoch 1 changed state of replica 0 for partition [twitterstream,0] from NewReplica to OnlineReplica (state.change.logger)
[2017-01-23 07:46:32,048] TRACE Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 1 starting the become-leader transition for partition [twitterstream,0] (state.change.logger)
[2017-01-23 07:46:32,121] TRACE Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 1 with correlation id 1 for partition [twitterstream,0] (state.change.logger)
[2017-01-23 07:46:32,122] TRACE Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 1 for the become-leader transition for partition [twitterstream,0] (state.change.logger)
[2017-01-23 07:46:32,127] TRACE Controller 0 epoch 1 received response {error_code=0,partitions=[{topic=twitterstream,partition=0,error_code=0}]} for a request sent to broker 192.168.0.13:9092 (id: 0 rack: null) (state.change.logger)
[2017-01-23 07:46:32,132] TRACE Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),ReplicationFactor:1),AllReplicas:0) for partition twitterstream-0 in response to UpdateMetadata request sent by controller 0 epoch 1 with correlation id 2 (state.change.logger)
[2017-01-23 07:46:32,132] TRACE Controller 0 epoch 1 received response {error_code=0} for a request sent to broker 192.168.0.13:9092 (id: 0 rack: null) (state.change.logger)
[2017-01-23 07:59:48,177] TRACE Controller 0 epoch 2 started leader election for partition [twitterstream,0] (state.change.logger)
[2017-01-23 07:59:48,186] ERROR Controller 0 epoch 2 initiated state change for partition [twitterstream,0] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [twitterstream,0] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply$mcZ$sp(KafkaController.scala:1168)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$SessionExpirationListener.handleNewSession(KafkaController.scala:1166)
	at org.I0Itec.zkclient.ZkClient$6.run(ZkClient.java:735)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:71)
